/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.io.FileNotFoundException;
import java.text.DecimalFormat;
import java.util.LinkedList;
import java.util.Scanner;

import reportes.estadisticas;
import javax.swing.JLabel;

import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import Sistemacanjemillas.sistemacanjemillas;
import Tabladestino.lugar;
import Tabladestino.parlugares;
import Tabladestino.tabladestino;
import Viaje.business;
import Viaje.primera;
import Viaje.turista;
import Viaje.viaje;
import Viajero.viajero;
import generadordemillas.generadordemillas;
import generadordemillas.hotel;

import java.util.Iterator;

import javax.swing.JPanel;
import javax.swing.JTextArea;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Producto.producto;
import generadordemillas.Est;
import generadordemillas.combustible;
import generadordemillas.consumo;

import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JList;
import javax.swing.JTextField;
import javax.swing.JRadioButton;
import javax.swing.JButton;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.DefaultComboBoxModel;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import javax.swing.JSeparator;
import javax.swing.JCheckBox;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 *
 * @author Guillermo Romero, Marco Popovich
 */
public class IU extends javax.swing.JFrame {
    /**
     * Creates new form IU
     */
    public IU() {
    	setPreferredSize(new Dimension(1024, 600));
    	setSize(new Dimension(1024, 600));
    	setBounds(new Rectangle(0, 0, 1024, 600));
    	setMaximumSize(new Dimension(1024, 600));
        initComponents();
        Panelestadisticas.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        panelcard = new javax.swing.JPanel();
        Panelestadisticas = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel7.setBounds(20, 426, 138, 38);
        jLabel8 = new javax.swing.JLabel();
        jLabel8.setBounds(27, 324, 143, 48);
        Barracon = new javax.swing.JProgressBar();
        Barracon.setBounds(30, 471, 716, 32);
        Barraviaje = new javax.swing.JProgressBar();
        Barraviaje.setBounds(27, 144, 709, 46);
        Barrahotel = new javax.swing.JProgressBar();
        Barrahotel.setBounds(27, 255, 709, 46);
        Barracomb = new javax.swing.JProgressBar();
        Barracomb.setBounds(27, 378, 709, 37);
        jLabel2 = new javax.swing.JLabel();
        jLabel2.setBounds(322, 0, 373, 37);
        Texttotalest = new javax.swing.JLabel();
        Texttotalest.setBounds(43, 55, 386, 29);
        jLabel9 = new javax.swing.JLabel();
        jLabel9.setBounds(27, 90, 188, 48);
        jLabel10 = new javax.swing.JLabel();
        jLabel10.setBounds(37, 201, 253, 48);
        jMenuBar1 = new javax.swing.JMenuBar();
        list3 = new JScrollPane();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem6.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		sis.deserializartodo();
        		actualizalista();
        	}
        });
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem4.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		sis.serializartodo();
        	}
        });
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		sis.registramillas();
        		actualizalista();
        	}
        });
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		try {
					sis.cargalistaviajero();
				} catch (FileNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        		sis.cargalistagen();
        		tabladestino.cargapares();
        		sis.cargaviajecanj();
        		actualizalista();
        	}
        });
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem19 = new javax.swing.JMenuItem();
        card = new CardLayout();
        sis = sistemacanjemillas.creasistema();
        sis.cargalistaproductos();
        tabladestino.cargalugares();
        jMenuItem19.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		ranking.setText(sis.ranking());
        		card.show(panelcard, "card1");
        	}
        });
        jMenuItem20 = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Canje de Millas");
        
        panelcard.setLayout(card);

        jLabel7.setFont(new Font("Tahoma", Font.PLAIN, 18)); // NOI18N
        jLabel7.setText("Consumo:");

        jLabel8.setFont(new Font("Tahoma", Font.PLAIN, 18)); // NOI18N
        jLabel8.setText("Combustible:");

        jLabel2.setFont(new Font("Tahoma", Font.PLAIN, 30)); // NOI18N
        jLabel2.setText("Estad\u00EDsticas de Generadores");

        Texttotalest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Texttotalest.setText("Total de Millas Obtenidas:");

        jLabel9.setFont(new Font("Tahoma", Font.PLAIN, 18)); // NOI18N
        jLabel9.setText("Viajes Generadores:");

        jLabel10.setFont(new Font("Tahoma", Font.PLAIN, 18)); // NOI18N
        jLabel10.setText("Hoteles:");
        
        textvecesvia = new JLabel();
        textvecesvia.setBounds(233, 103, 178, 22);
        textvecesvia.setText("Hoteles:");
        textvecesvia.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textveceshot = new JLabel();
        textveceshot.setBounds(233, 210, 215, 31);
        textveceshot.setText("Hoteles:");
        textveceshot.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textvecescom = new JLabel();
        textvecescom.setBounds(233, 324, 215, 48);
        textvecescom.setText("Hoteles:");
        textvecescom.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textvecescon = new JLabel();
        textvecescon.setBounds(233, 438, 196, 22);
        textvecescon.setText("Hoteles:");
        textvecescon.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textpromvia = new JLabel();
        textpromvia.setBounds(469, 96, 267, 37);
        textpromvia.setText("Hoteles:");
        textpromvia.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textpromhot = new JLabel();
        textpromhot.setBounds(469, 201, 196, 48);
        textpromhot.setText("Hoteles:");
        textpromhot.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textpromcom = new JLabel();
        textpromcom.setBounds(469, 337, 182, 22);
        textpromcom.setText("Hoteles:");
        textpromcom.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        textpromcon = new JLabel();
        textpromcon.setBounds(469, 426, 182, 35);
        textpromcon.setText("Hoteles:");
        textpromcon.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        btnVolver = new JButton("Atr\u00E1s");
        btnVolver.setBounds(818, 471, 99, 31);
        btnVolver.setFont(new Font("Tahoma", Font.PLAIN, 18));
        
        bvia = true;
        bviaj = bgen = bpar = false;
        
        btnVolver.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });

        panelcard.add(Panelestadisticas, "card2");
        Panelestadisticas.setLayout(null);
        Panelestadisticas.add(jLabel2);
        Panelestadisticas.add(Texttotalest);
        Panelestadisticas.add(textvecesvia);
        Panelestadisticas.add(textpromvia);
        Panelestadisticas.add(btnVolver);
        Panelestadisticas.add(Barracomb);
        Panelestadisticas.add(jLabel8);
        Panelestadisticas.add(textvecescom);
        Panelestadisticas.add(textpromcom);
        Panelestadisticas.add(Barraviaje);
        Panelestadisticas.add(jLabel9);
        Panelestadisticas.add(jLabel10);
        Panelestadisticas.add(textveceshot);
        Panelestadisticas.add(textpromhot);
        Panelestadisticas.add(Barrahotel);
        Panelestadisticas.add(Barracon);
        Panelestadisticas.add(jLabel7);
        Panelestadisticas.add(textvecescon);
        Panelestadisticas.add(textpromcon);

        jMenu1.setText("Archivo");

        jMenuItem6.setText("Cargar");
        jMenu1.add(jMenuItem6);

        jMenuItem4.setText("Guardar");
        jMenu1.add(jMenuItem4);

        jMenuItem2.setText("Cargar xml");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Cargar Lote");
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Cerrar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Nuevo");

        jMenuBar1.add(jMenu2);
        
        JMenuItem menuItem = new JMenuItem();
        menuItem.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "nuevovia");
        	}
        });
        menuItem.setText("Viajero");
        jMenu2.add(menuItem);
        
        JMenuItem menuItem_1 = new JMenuItem();
        menuItem_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "nuevoviaje");
        	}
        });
        menuItem_1.setText("Viaje Canjeable");
        jMenu2.add(menuItem_1);
        
        JMenuItem menuItem_2 = new JMenuItem();
        menuItem_2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "nuevogen");
        	}
        });
        menuItem_2.setText("Generador");
        jMenu2.add(menuItem_2);
        
        JMenuItem menuItem_3 = new JMenuItem();
        menuItem_3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "nuevopar");
        	}
        });
        menuItem_3.setText("Origen/Destino");
        jMenu2.add(menuItem_3);

        jMenu5.setText("Reportes");
        
        mntmListadoDeLugares = new JMenuItem("Listado de Lugares");
        mntmListadoDeLugares.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		arealugar.setText("");
        		areacant.setText("");
        		boolean alguno = false;
        		LinkedList<lugar> lista = tabladestino.reportelugares();
        		lugar lug;
        		Iterator<lugar> it = lista.iterator();
        		while (it.hasNext()){
        			lug = it.next();
        			if (lug.getDesveceselegido() >= 5){
        				arealugar.setText(arealugar.getText() + lug.getNomb() + lug.getDesc() + "\n\n");
        				areacant.setText(areacant.getText() + lug.getDesveceselegido() + "\n\n");
        				alguno = true;
        			}	
        		}
        		if (!alguno)
        			arealugar.setText("No hay Lugares que hayan sido elegidos al menos 5 veces.");
        		card.show(panelcard, "card3");
        	}
        });
        jMenu5.add(mntmListadoDeLugares);

        jMenuItem19.setText("Ranking de Viajeros");
        jMenu5.add(jMenuItem19);

        jMenuItem20.setText("Estad\u00EDsticas de Generadores");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem20);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelcard, javax.swing.GroupLayout.DEFAULT_SIZE, 1822, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelcard, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                .addContainerGap())
        );
        
        panelranking = new JPanel();
        panelranking.setPreferredSize(new Dimension(0, 0));
        panelcard.add(panelranking, "card1");
        panelranking.setLayout(null);
        
        lblNewLabel = new JLabel("Ranking de Viajeros");
        lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 25));
        lblNewLabel.setBounds(10, 11, 296, 31);
        panelranking.add(lblNewLabel);
        
        ranking = new JTextArea();
        ranking.setEditable(false);
        ranking.setFont(new Font("Arial", Font.PLAIN, 11));
        ranking.setBounds(10, 53, 948, 400);
        panelranking.add(ranking);
        
        btnAtrs = new JButton("Atr\u00E1s");
        btnAtrs.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnAtrs.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnAtrs.setBounds(833, 464, 125, 31);
        panelranking.add(btnAtrs);
        
        panellistlugar = new JPanel();
        panelcard.add(panellistlugar, "card3");
        panellistlugar.setLayout(null);
        
        lblListadoDeLugares = new JLabel("Listado de Lugares");
        lblListadoDeLugares.setFont(new Font("Arial", Font.PLAIN, 25));
        lblListadoDeLugares.setBounds(10, 11, 259, 34);
        panellistlugar.add(lblListadoDeLugares);
        
        arealugar = new JTextArea();
        arealugar.setEditable(false);
        arealugar.setFont(new Font("Arial", Font.PLAIN, 11));
        arealugar.setBounds(20, 56, 644, 383);
        panellistlugar.add(arealugar);
        
        areacant = new JTextArea();
        areacant.setEditable(false);
        areacant.setFont(new Font("Arial", Font.PLAIN, 11));
        areacant.setBounds(737, 56, 54, 383);
        panellistlugar.add(areacant);
        
        lblVecesElegidoComo = new JLabel("Veces Elegido Como Destino");
        lblVecesElegidoComo.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblVecesElegidoComo.setBounds(657, 13, 269, 34);
        panellistlugar.add(lblVecesElegidoComo);
        
        btnAtrs_1 = new JButton("Atr\u00E1s");
        btnAtrs_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnAtrs_1.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnAtrs_1.setBounds(639, 470, 115, 34);
        panellistlugar.add(btnAtrs_1);
        
        JPanel menucanje = new JPanel();
        panelcard.add(menucanje, "principal");
        menucanje.setLayout(null);
        
        lblMenuDeCanjes = new JLabel("Menu de Canjes");
        lblMenuDeCanjes.setFont(new Font("Tahoma", Font.PLAIN, 30));
        lblMenuDeCanjes.setBounds(385, 11, 241, 49);
        menucanje.add(lblMenuDeCanjes);
        
        list_1 = new JList();
        list_1.addListSelectionListener(new ListSelectionListener() {
        	public void valueChanged(ListSelectionEvent arg0) {
        		if (!list_2.isSelectionEmpty())
        			botoncanje.setEnabled(true);
        		else
        			botoncanje.setEnabled(false);
        	}
        });
        list_1.setBounds(10, 119, 320, 402);
        menucanje.add(list_1);
        list_1.setEnabled(false);
        
        list_2 = new JList();
        list_2.addListSelectionListener(new ListSelectionListener() {
        	public void valueChanged(ListSelectionEvent e) {
        		if (!list_1.isSelectionEmpty())
        			botoncanje.setEnabled(true);
        		else
        			botoncanje.setEnabled(false);
        	}
        });
        list_2.setBounds(357, 119, 556, 402);
        menucanje.add(list_2);
        list_2.setEnabled(false);
        
        JLabel lblElijaUnViajero = new JLabel("Elija un Viajero");
        lblElijaUnViajero.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblElijaUnViajero.setBounds(10, 75, 165, 33);
        menucanje.add(lblElijaUnViajero);
        
        JLabel lblElijaUnViaje = new JLabel("Elija un Viaje / Producto");
        lblElijaUnViaje.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblElijaUnViaje.setBounds(357, 71, 241, 25);
        menucanje.add(lblElijaUnViaje);
        
        checkviaje = new JRadioButton("Viaje");
        checkviaje.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (checkviaje.isSelected())
        			checkprod.setSelected(false);
        		else
        			checkprod.setSelected(true);
        		actualizalista();
        	}
        });
        checkviaje.setFont(new Font("Tahoma", Font.PLAIN, 18));
        checkviaje.setBounds(629, 81, 109, 23);
        menucanje.add(checkviaje);
        checkviaje.setSelected(true);
        
        checkprod = new JRadioButton("Producto");
        checkprod.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (checkprod.isSelected())
        			checkviaje.setSelected(false);
        		else
        			checkviaje.setSelected(true);
        		actualizalista();
        	}
        });
        checkprod.setFont(new Font("Tahoma", Font.PLAIN, 18));
        checkprod.setBounds(835, 81, 109, 23);
        menucanje.add(checkprod);
        
        botoncanje = new JButton("Realizar Canje");
        botoncanje.setEnabled(false);
        botoncanje.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		String l1 = (String) list_1.getSelectedValue();
        		String l2 = (String) list_2.getSelectedValue();
        		{
        			Scanner s = new Scanner(l1);
        			s.useDelimiter("\\s* \\s*");
        			l1 = s.next();
        			s.close();
        		}
        		{
        			Scanner s = new Scanner(l2);
        			s.useDelimiter("\\s* \\s*");
        			l2 = s.next();
        			s.close();
        		}
        		viajero via = sis.getvia(l1);
        		producto prod;
        		viaje viaj;
        		textvia.setText(String.valueOf(via.getDni()));
        		textnom.setText(via.getNom());
        		textdisp.setText(String.valueOf(via.getMillasdisp()));
        		if (checkprod.isSelected()){
        			prod = sis.getprod(l2);
        			textprod.setText(prod.getNomb());
        			textdesprod.setText(prod.getDesc());
        			textprod.setEnabled(true);
        			textdesprod.setEnabled(true);
        			textid.setEnabled(false);
        			textori.setEnabled(false);
        			textdes.setEnabled(false);
        			textcost.setText(String.valueOf(prod.getCostomillas()));
        		}
        		else{
        			viaj = sis.getviaje(l2);
        			textid.setText(viaj.getNomb());
        			textori.setText(viaj.getOrigen());
        			textdes.setText(viaj.getDestino());
        			textid.setEnabled(true);
        			textori.setEnabled(true);
        			textdes.setEnabled(true);
        			textprod.setEnabled(false);
        			textdesprod.setEnabled(false);
        			textcost.setText(String.valueOf(viaj.costmillas()));
        		}
        		card.show(panelcard, "detalles");
        	}
        });
        botoncanje.setFont(new Font("Tahoma", Font.PLAIN, 18));
        botoncanje.setBounds(723, 24, 175, 33);
        menucanje.add(botoncanje);
        
        JButton btnListados = new JButton("Listados");
        btnListados.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "lista");
        		blistavia.doClick();
        		beli.setEnabled(false);
        		bmod.setEnabled(false);
        	}
        });
        btnListados.setFont(new Font("Tahoma", Font.PLAIN, 20));
        btnListados.setBounds(55, 22, 165, 42);
        menucanje.add(btnListados);
        
        card.show(panelcard, "principal");
        
        detallescanje = new JPanel();
        panelcard.add(detallescanje, "detalles");
        detallescanje.setLayout(null);
        
        JLabel lblDetallesDelCanje = new JLabel("Detalles del canje");
        lblDetallesDelCanje.setFont(new Font("Tahoma", Font.PLAIN, 30));
        lblDetallesDelCanje.setBounds(387, 11, 345, 54);
        detallescanje.add(lblDetallesDelCanje);
        
        JLabel lblViajero = new JLabel("Viajero:");
        lblViajero.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblViajero.setBounds(81, 83, 86, 28);
        detallescanje.add(lblViajero);
        
        textvia = new JTextField();
        textvia.setEditable(false);
        textvia.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textvia.setBounds(215, 83, 201, 28);
        detallescanje.add(textvia);
        textvia.setColumns(10);
        
        textnom = new JTextField();
        textnom.setEditable(false);
        textnom.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textnom.setBounds(215, 151, 201, 28);
        detallescanje.add(textnom);
        textnom.setColumns(10);
        
        JLabel lblNombre = new JLabel("Nombre:");
        lblNombre.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblNombre.setBounds(81, 151, 97, 28);
        detallescanje.add(lblNombre);
        
        JLabel lblMillasDisponibles = new JLabel("Millas Disponibles:");
        lblMillasDisponibles.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblMillasDisponibles.setBounds(60, 256, 155, 22);
        detallescanje.add(lblMillasDisponibles);
        
        textdisp = new JTextField();
        textdisp.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textdisp.setEditable(false);
        textdisp.setBounds(215, 252, 201, 36);
        detallescanje.add(textdisp);
        textdisp.setColumns(10);
        
        JLabel lblViaje = new JLabel("Viaje:");
        lblViaje.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblViaje.setBounds(582, 76, 86, 36);
        detallescanje.add(lblViaje);
        
        JLabel lblOrigen = new JLabel("Origen:");
        lblOrigen.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblOrigen.setBounds(582, 151, 86, 36);
        detallescanje.add(lblOrigen);
        
        JLabel lblDestino = new JLabel("Destino:");
        lblDestino.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblDestino.setBounds(582, 229, 86, 36);
        detallescanje.add(lblDestino);
        
        JLabel lblProducto = new JLabel("Producto:");
        lblProducto.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblProducto.setBounds(582, 300, 86, 36);
        detallescanje.add(lblProducto);
        
        JLabel lblDescripcion = new JLabel("Descripcion:");
        lblDescripcion.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblDescripcion.setBounds(582, 384, 126, 36);
        detallescanje.add(lblDescripcion);
        
        JLabel lblCostoDelCanje = new JLabel("Costo del canje:");
        lblCostoDelCanje.setFont(new Font("Tahoma", Font.PLAIN, 20));
        lblCostoDelCanje.setBounds(99, 466, 155, 36);
        detallescanje.add(lblCostoDelCanje);
        
        textid = new JTextField();
        textid.setEditable(false);
        textid.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textid.setColumns(10);
        textid.setBounds(719, 83, 201, 28);
        detallescanje.add(textid);
        
        textori = new JTextField();
        textori.setEditable(false);
        textori.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textori.setColumns(10);
        textori.setBounds(719, 151, 201, 28);
        detallescanje.add(textori);
        
        textdes = new JTextField();
        textdes.setEditable(false);
        textdes.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textdes.setColumns(10);
        textdes.setBounds(719, 234, 201, 28);
        detallescanje.add(textdes);
        
        textprod = new JTextField();
        textprod.setEditable(false);
        textprod.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textprod.setColumns(10);
        textprod.setBounds(719, 305, 201, 28);
        detallescanje.add(textprod);
        
        textdesprod = new JTextField();
        textdesprod.setEditable(false);
        textdesprod.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textdesprod.setColumns(10);
        textdesprod.setBounds(718, 389, 201, 28);
        detallescanje.add(textdesprod);
        
        textcost = new JTextField();
        textcost.setEditable(false);
        textcost.setFont(new Font("Tahoma", Font.PLAIN, 18));
        textcost.setColumns(10);
        textcost.setBounds(264, 471, 201, 28);
        detallescanje.add(textcost);
        
        JButton btnVolver_1 = new JButton("Volver");
        btnVolver_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		card.show(panelcard, "principal");
        	}
        });
        btnVolver_1.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnVolver_1.setBounds(600, 465, 132, 41);
        detallescanje.add(btnVolver_1);
        
        JButton btnCanjear = new JButton("Canjear");
        btnCanjear.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		boolean exito = false;
        		if (Double.parseDouble(textdisp.getText()) > Double.parseDouble(textcost.getText())){
        			String l1 = (String) list_1.getSelectedValue();
        			String l2 = (String) list_2.getSelectedValue();
        			{
        				Scanner s = new Scanner(l1);
        				s.useDelimiter("\\s* \\s*");
        				l1 = s.next();
        				s.close();
        			}
        			{
        				Scanner s = new Scanner(l2);
        				s.useDelimiter("\\s* \\s*");
        				l2 = s.next();
        				s.close();
        			}
        			viajero via = sis.getvia(l1);
        			if (checkviaje.isSelected()){
        				viaje viaj = sis.getviaje(l2);
        				exito = sis.CanjeaViaje(via.getDni(),viaj.getId());
        			}
        			else{
        				producto pro = sis.getprod(l2);
        				exito = sis.canjearproducto(via.getDni(), pro.getNomb());
        			}
        			if (exito){
        				JOptionPane.showMessageDialog(new JFrame(), "Canje Realizado");
        				if (sis.cambiatipo(via))
        					JOptionPane.showMessageDialog(new JFrame(), "El viajero ahora es frecuente");
        			}
        			else
        				JOptionPane.showMessageDialog(new JFrame(), "Error en el canje");
        			actualizalista();
        			sis.cambiatipo(via);
        		}
        		else
        			JOptionPane.showMessageDialog(new JFrame(), "millas insuficientes");
        		card.show(panelcard, "principal");
        	}
        });
        btnCanjear.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnCanjear.setBounds(813, 465, 132, 41);
        detallescanje.add(btnCanjear);
        
        JPanel panellistas = new JPanel();
        panelcard.add(panellistas, "lista");
        panellistas.setLayout(null);
        
        JPanel panelcard2 = new JPanel();
        panelcard2.setBounds(485, 139, 523, 344);
        panellistas.add(panelcard2);
        card2 = new CardLayout();
        panelcard2.setLayout(card2);
        
        panel = new JPanel();
        panelcard2.add(panel, "nulo");
        
        modivia = new JPanel();
        panelcard2.add(modivia, "modivia");
        modivia.setLayout(null);
        
        lblDni = new JLabel("DNI:");
        lblDni.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDni.setBounds(10, 11, 57, 29);
        modivia.add(lblDni);
        
        lblNombre_2 = new JLabel("Nombre:");
        lblNombre_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNombre_2.setBounds(10, 51, 75, 29);
        modivia.add(lblNombre_2);
        
        moddni = new JTextField();
        moddni.setEnabled(false);
        moddni.setBounds(77, 13, 160, 29);
        modivia.add(moddni);
        moddni.setColumns(10);
        
        modnombre = new JTextField();
        modnombre.setColumns(10);
        modnombre.setBounds(77, 53, 160, 29);
        modivia.add(modnombre);
        
        btnModificarViajero = new JButton("Modificar Viajero");
        btnModificarViajero.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (modnombre.getText().equals(""))
        			JOptionPane.showMessageDialog(new JFrame(), "Hay Campos Vacios");
        		else{
        			sis.modificaviajero(Integer.parseInt(moddni.getText()), modnombre.getText());
        			blistavia.doClick();
        		}
        	}
        });
        btnModificarViajero.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnModificarViajero.setBounds(30, 106, 196, 31);
        modivia.add(btnModificarViajero);
        
        modiviaj = new JPanel();
        panelcard2.add(modiviaj, "modiviaj");
        modiviaj.setLayout(null);
        
        JLabel label = new JLabel("ID:");
        label.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label.setBounds(10, 11, 53, 37);
        modiviaj.add(label);
        
        canjid = new JTextField();
        canjid.setFont(new Font("Tahoma", Font.PLAIN, 12));
        canjid.setEditable(false);
        canjid.setColumns(10);
        canjid.setBounds(96, 12, 129, 37);
        modiviaj.add(canjid);
        
        JLabel label_1 = new JLabel("Nombre:");
        label_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_1.setBounds(10, 59, 77, 37);
        modiviaj.add(label_1);
        
        canjnom = new JTextField();
        canjnom.setFont(new Font("Tahoma", Font.PLAIN, 12));
        canjnom.setColumns(10);
        canjnom.setBounds(96, 60, 129, 37);
        modiviaj.add(canjnom);
        
        JLabel label_2 = new JLabel("Descripcion:");
        label_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_2.setBounds(10, 109, 101, 37);
        modiviaj.add(label_2);
        
        JTextArea canjdes = new JTextArea();
        canjdes.setFont(new Font("Tahoma", Font.PLAIN, 13));
        canjdes.setBounds(96, 118, 345, 103);
        modiviaj.add(canjdes);
        
        JLabel label_3 = new JLabel("Factor:");
        label_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_3.setBounds(10, 231, 67, 37);
        modiviaj.add(label_3);
        
        canjfac = new JTextField();
        canjfac.setFont(new Font("Tahoma", Font.PLAIN, 12));
        canjfac.setColumns(10);
        canjfac.setBounds(96, 232, 129, 37);
        modiviaj.add(canjfac);
        
        JLabel label_4 = new JLabel("Estado:");
        label_4.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_4.setBounds(10, 279, 67, 37);
        modiviaj.add(label_4);
        
        JComboBox canjest = new JComboBox();
        canjest.setModel(new DefaultComboBoxModel(new String[] {"Disponible", "Caduco", "Suspendido"}));
        canjest.setFont(new Font("Tahoma", Font.PLAIN, 14));
        canjest.setBounds(96, 279, 129, 37);
        modiviaj.add(canjest);
        
        JButton button = new JButton("Modificar Viaje");
        button.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		Est e1;
        		if (canjest.getSelectedIndex() == 0)
        			e1 = Est.Disponible;
        		else
        			if (canjest.getSelectedIndex() == 1)
        				e1 = Est.Caduco;
        			else
        				e1 = Est.Suspendido;
        		if (canjnom.getText().equals("") || canjdes.getText().equals("") || canjfac.getText().equals(""))
        			JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        		else
        			try{
        				if (Double.parseDouble(canjfac.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "El factor no puede ser menor a 0");
        				else{
        					sis.modificaviaj(canjid.getText(), canjnom.getText(), canjdes.getText(), Double.parseDouble(canjfac.getText()), e1);
        					blistaviaj.doClick();
        				}
        			}
        			catch(NumberFormatException ex){
        				JOptionPane.showMessageDialog(new JFrame(), "El factor no tiene un valor valido");
        			}
        	}
        });
        button.setFont(new Font("Tahoma", Font.PLAIN, 15));
        button.setBounds(280, 301, 177, 31);
        modiviaj.add(button);
        
        JLabel label_7 = new JLabel("Destino:");
        label_7.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_7.setBounds(240, 68, 81, 37);
        modiviaj.add(label_7);
        
        canjdest = new JTextField();
        canjdest.setEnabled(false);
        canjdest.setFont(new Font("Tahoma", Font.PLAIN, 12));
        canjdest.setColumns(10);
        canjdest.setBounds(312, 68, 129, 37);
        modiviaj.add(canjdest);
        
        JLabel label_8 = new JLabel("Origen:");
        label_8.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_8.setBounds(240, 20, 81, 37);
        modiviaj.add(label_8);
        
        canjori = new JTextField();
        canjori.setEnabled(false);
        canjori.setFont(new Font("Tahoma", Font.PLAIN, 12));
        canjori.setColumns(10);
        canjori.setBounds(312, 21, 129, 37);
        modiviaj.add(canjori);
        
        modipar = new JPanel();
        panelcard2.add(modipar, "modipar");
        modipar.setLayout(null);
        
        lblOrigen_2 = new JLabel("Origen:");
        lblOrigen_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblOrigen_2.setBounds(10, 11, 99, 33);
        modipar.add(lblOrigen_2);
        
        lblDestino_2 = new JLabel("Destino:");
        lblDestino_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDestino_2.setBounds(10, 78, 62, 33);
        modipar.add(lblDestino_2);
        
        lblGanancia = new JLabel("Ganancia:");
        lblGanancia.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblGanancia.setBounds(10, 144, 83, 33);
        modipar.add(lblGanancia);
        
        lblCosto_1 = new JLabel("Costo:");
        lblCosto_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCosto_1.setBounds(10, 199, 62, 33);
        modipar.add(lblCosto_1);
        
        parori = new JTextField();
        parori.setEnabled(false);
        parori.setBounds(82, 13, 167, 33);
        modipar.add(parori);
        parori.setColumns(10);
        
        pardes = new JTextField();
        pardes.setEnabled(false);
        pardes.setColumns(10);
        pardes.setBounds(82, 80, 167, 33);
        modipar.add(pardes);
        
        pargan = new JTextField();
        pargan.setColumns(10);
        pargan.setBounds(83, 146, 167, 33);
        modipar.add(pargan);
        
        parcost = new JTextField();
        parcost.setColumns(10);
        parcost.setBounds(82, 201, 167, 33);
        modipar.add(parcost);
        
        btnModificarPar = new JButton("Modificar Par");
        btnModificarPar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		try{
        			if (Double.parseDouble(pargan.getText()) <0 || Double.parseDouble(parcost.getText()) <0)
        				JOptionPane.showMessageDialog(new JFrame(), "La ganancia y El costo deben ser valores positivos");
        			else{
        				sis.modificaparlugar(parori.getText(), pardes.getText(), Double.parseDouble(pargan.getText()), Double.parseDouble(parcost.getText()));
        				blistapar.doClick();
        			}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "Formato de ganancia y/o costo no es valido");
        		}
        	}
        });
        btnModificarPar.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnModificarPar.setBounds(27, 257, 197, 33);
        modipar.add(btnModificarPar);
        
        modigen = new JPanel();
        panelcard2.add(modigen, "modigen");
        modigen.setLayout(null);
        
        lblNewLabel_1 = new JLabel("ID:");
        lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNewLabel_1.setBounds(36, 11, 53, 37);
        modigen.add(lblNewLabel_1);
        
        modigenid = new JTextField();
        modigenid.setEditable(false);
        modigenid.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modigenid.setBounds(122, 12, 129, 37);
        modigen.add(modigenid);
        modigenid.setColumns(10);
        
        lblNombre_1 = new JLabel("Nombre:");
        lblNombre_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNombre_1.setBounds(36, 59, 77, 37);
        modigen.add(lblNombre_1);
        
        JLabel lblDescripcion_1 = new JLabel("Descripcion:");
        lblDescripcion_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDescripcion_1.setBounds(12, 95, 101, 37);
        modigen.add(lblDescripcion_1);
        
        JLabel lblFactor = new JLabel("Factor:");
        lblFactor.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblFactor.setBounds(36, 231, 67, 37);
        modigen.add(lblFactor);
        
        modigennom = new JTextField();
        modigennom.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modigennom.setColumns(10);
        modigennom.setBounds(122, 60, 129, 37);
        modigen.add(modigennom);
        
        modigenfac = new JTextField();
        modigenfac.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modigenfac.setColumns(10);
        modigenfac.setBounds(122, 232, 129, 37);
        modigen.add(modigenfac);
        
        JPanel panelcard3 = new JPanel();
        panelcard3.setBounds(256, 11, 262, 322);
        modigen.add(panelcard3);
        CardLayout card3 = new CardLayout();
        panelcard3.setLayout(card3);
        
        panelmodcon = new JPanel();
        panelcard3.add(panelmodcon, "modcon");
        panelmodcon.setLayout(null);
        
        btnNewButton_2 = new JButton("Modificar Consumo");
        btnNewButton_2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		Est e;
        		if (modigenest.getSelectedIndex() == 0)
        			e = Est.Disponible;
        		else
        			if (modigenest.getSelectedIndex() == 1)
        				e = Est.Caduco;
        			else
        				e = Est.Suspendido;
        		try{
        			if (Double.parseDouble(modigenfac.getText()) < 0)
        				JOptionPane.showMessageDialog(new JFrame(), "factor no puede ser menor a 0");
        			else{
        				sis.modificagen(modigenid.getText(), modigennom.getText(), modigendes.getText(), Double.parseDouble(modigenfac.getText()), e);
        				blistagen.doClick();
        			}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "El formato de factor no es valido");
        		}
        	}
        });
        btnNewButton_2.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnNewButton_2.setBounds(39, 21, 183, 37);
        panelmodcon.add(btnNewButton_2);
        
        panelmodcomb = new JPanel();
        panelcard3.add(panelmodcomb, "modcomb");
        panelmodcomb.setLayout(null);
        
        btnModificarCombustible = new JButton("Modificar Combustible");
        btnModificarCombustible.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		Est e1;
        		if (modigenest.getSelectedIndex() == 0)
        			e1 = Est.Disponible;
        		else
        			if (modigenest.getSelectedIndex() == 1)
        				e1 = Est.Caduco;
        			else
        				e1 = Est.Suspendido;
        		try{
        			if (Double.parseDouble(modigenfac.getText()) < 0)
        				JOptionPane.showMessageDialog(new JFrame(), "factor no puede ser menor a 0");
        			else{
        				sis.modificagen(modigenid.getText(), modigennom.getText(), modigendes.getText(), Double.parseDouble(modigenfac.getText()), e1);
        				blistagen.doClick();
        			}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "El formato de factor no es valido");
        		}
        	}
        });
        btnModificarCombustible.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnModificarCombustible.setBounds(27, 11, 207, 37);
        panelmodcomb.add(btnModificarCombustible);
        
        panelmodhot = new JPanel();
        panelcard3.add(panelmodhot, "modhot");
        panelmodhot.setLayout(null);
        
        lblPrecioNoche = new JLabel("Precio noche:");
        lblPrecioNoche.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblPrecioNoche.setBounds(10, 11, 95, 30);
        panelmodhot.add(lblPrecioNoche);
        
        lblCantDeNoches = new JLabel("Cant. de noches:");
        lblCantDeNoches.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCantDeNoches.setBounds(10, 72, 119, 30);
        panelmodhot.add(lblCantDeNoches);
        
        lblCategria = new JLabel("Categoria:");
        lblCategria.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCategria.setBounds(10, 133, 73, 30);
        panelmodhot.add(lblCategria);
        
        modprecionoche = new JTextField();
        modprecionoche.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modprecionoche.setColumns(10);
        modprecionoche.setBounds(128, 9, 129, 37);
        panelmodhot.add(modprecionoche);
        
        modcantnoche = new JTextField();
        modcantnoche.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modcantnoche.setColumns(10);
        modcantnoche.setBounds(128, 70, 129, 37);
        panelmodhot.add(modcantnoche);
        
        modcat = new JTextField();
        modcat.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modcat.setColumns(10);
        modcat.setBounds(128, 131, 129, 37);
        panelmodhot.add(modcat);
        
        btnNewButton_1 = new JButton("Modificar Hotel");
        btnNewButton_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		Est e1;
        		if (modigenest.getSelectedIndex() == 0)
        			e1 = Est.Disponible;
        		else
        			if (modigenest.getSelectedIndex() == 1)
        				e1 = Est.Caduco;
        			else
        				e1 = Est.Suspendido;
        		try{
        			if (modigennom.getText().equals("") || modigendes.getText().equals(""))
        				JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        			else
        				if (Double.parseDouble(modigenfac.getText()) < 0 || Double.parseDouble(modprecionoche.getText()) < 0 || Integer.parseInt(modcat.getText()) < 0 || Integer.parseInt(modcantnoche.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "Los valores numericos no pueden ser menor a 0");
        				else{
        					sis.modifhotel(modigenid.getText(), modigennom.getText(), modigendes.getText(), Double.parseDouble(modigenfac.getText()), e1, Integer.parseInt(modcat.getText()), Double.parseDouble(modprecionoche.getText()), Integer.parseInt(modcantnoche.getText()));
        					blistagen.doClick();
        				}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "Valores numericos incorrectos");
        		}
        	}
        });
        btnNewButton_1.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnNewButton_1.setBounds(60, 196, 157, 30);
        panelmodhot.add(btnNewButton_1);
        
        JPanel panelmodviaje = new JPanel();
        panelcard3.add(panelmodviaje, "modviaje");
        panelmodviaje.setLayout(null);
        
        JLabel lblOrigen_1 = new JLabel("Origen:");
        lblOrigen_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblOrigen_1.setBounds(10, 9, 81, 37);
        panelmodviaje.add(lblOrigen_1);
        
        JLabel lblDestino_1 = new JLabel("Destino:");
        lblDestino_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDestino_1.setBounds(10, 57, 81, 37);
        panelmodviaje.add(lblDestino_1);
        
        modigenori = new JTextField();
        modigenori.setEnabled(false);
        modigenori.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modigenori.setColumns(10);
        modigenori.setBounds(82, 10, 129, 37);
        panelmodviaje.add(modigenori);
        
        modigendest = new JTextField();
        modigendest.setEnabled(false);
        modigendest.setFont(new Font("Tahoma", Font.PLAIN, 12));
        modigendest.setColumns(10);
        modigendest.setBounds(82, 57, 129, 37);
        panelmodviaje.add(modigendest);
        
        JButton btnModificar_1 = new JButton("Modificar Viaje");
        btnModificar_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		Est e;
        		if (modigenest.getSelectedIndex() == 0)
        			e = Est.Disponible;
        		else
        			if (modigenest.getSelectedIndex() == 1)
        				e = Est.Caduco;
        			else
        				e = Est.Suspendido;
        		try{
        			if (modigennom.getText().equals("") || modigendes.getText().equals(""))
        				JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        			else
        				if (Double.parseDouble(modigenfac.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "Factor no puede ser menor a 0");
        				else{
        					sis.modificagen(modigenid.getText(), modigennom.getText(), modigendes.getText(), Double.parseDouble(modigenfac.getText()), e);
        					blistagen.doClick();
        				}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "El valor de factor no es valido");
        		}
        	}
        });
        btnModificar_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnModificar_1.setBounds(45, 144, 177, 31);
        panelmodviaje.add(btnModificar_1);
        
        modigendes = new JTextArea();
        modigendes.setFont(new Font("Tahoma", Font.PLAIN, 13));
        modigendes.setBounds(10, 132, 241, 73);
        modigen.add(modigendes);
        
        lblEstado = new JLabel("Estado:");
        lblEstado.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblEstado.setBounds(36, 279, 67, 37);
        modigen.add(lblEstado);
        
        modigenest = new JComboBox();
        modigenest.setModel(new DefaultComboBoxModel(new String[] {"Disponible", "Caduco", "Suspendido"}));
        modigenest.setBounds(122, 280, 129, 37);
        modigen.add(modigenest);
        
        JLabel lblListados = new JLabel("Listados");
        lblListados.setFont(new Font("Tahoma", Font.PLAIN, 28));
        lblListados.setBounds(420, 11, 153, 25);
        panellistas.add(lblListados);
        
        blistavia = new JButton("Viajeros");
        blistavia.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		list_3.setModel(sis.generalista1());
        		bvia = true;
        		bviaj = bgen = bpar = false;
        		card2.show(panelcard2, "nulo");
        	}
        });
        blistavia.setFont(new Font("Tahoma", Font.PLAIN, 18));
        blistavia.setBounds(32, 61, 172, 25);
        panellistas.add(blistavia);
        
        blistagen = new JButton("Generadores de Millas");
        blistagen.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		list_3.setModel(sis.generalistagen());
        		bgen = true;
        		bvia = bviaj = bpar = false;
        		card2.show(panelcard2, "nulo");
        	}
        });
        blistagen.setFont(new Font("Tahoma", Font.PLAIN, 18));
        blistagen.setBounds(239, 61, 205, 25);
        panellistas.add(blistagen);
        
        blistaviaj = new JButton("Viajes Canjeables");
        blistaviaj.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		list_3.setModel(sis.generalistacanj());
        		bviaj = true;
        		bvia = bgen = bpar = false;
        		card2.show(panelcard2, "nulo");
        	}
        });
        blistaviaj.setFont(new Font("Tahoma", Font.PLAIN, 18));
        blistaviaj.setBounds(504, 61, 191, 25);
        panellistas.add(blistaviaj);
        
        blistapar = new JButton("Pares de Lugares");
        blistapar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		list_3.setModel(tabladestino.generalistapar());
        		bpar = true;
        		bvia = bviaj = bgen = false;
        		card2.show(panelcard2, "nulo");
        	}
        });
        blistapar.setFont(new Font("Tahoma", Font.PLAIN, 18));
        blistapar.setBounds(741, 61, 181, 25);
        panellistas.add(blistapar);
        
        bmod = new JButton("Modificar");
        bmod.setEnabled(false);
        bmod.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		if (!list_3.isSelectionEmpty()){
        			String l = (String)list_3.getSelectedValue();
        			Scanner s = new Scanner(l);
        			if (bgen){
        				s.useDelimiter("\\s* \\s*");
        				generadordemillas gen = sis.getgen(s.next());
        				modigenid.setText(gen.getId());
        				modigennom.setText(gen.getNomb());
        				modigendes.setText(gen.getDesc());
        				modigenfac.setText(String.valueOf(gen.getFactor()));
        				card2.show(panelcard2, "modigen");
        				if (gen.getEstado().equals(Est.Disponible))
        					modigenest.setSelectedIndex(0);
        				else
        					if (gen.getEstado().equals(Est.Caduco))
        						modigenest.setSelectedIndex(1);
        					else
        						modigenest.setSelectedIndex(2);
        				if (gen instanceof hotel){
        					modprecionoche.setText(String.valueOf(((hotel) gen).getPrecionoche()));
        					modcantnoche.setText(String.valueOf(((hotel) gen).getCantnoches()));
        					modcat.setText(String.valueOf(((hotel) gen).getCat()));
        					card3.show(panelcard3, "modhot");
        				}
        				else
        					if (gen instanceof viaje){
        					 modigenori.setText(((viaje) gen).getOrigen());
        					 modigendest.setText(((viaje) gen).getDestino());
        					 card3.show(panelcard3, "modviaje");
        					}
        					else
        						if (gen instanceof combustible)
        							card3.show(panelcard3, "modcomb");
        						else
        							card3.show(panelcard3, "modcon");
        			}
        			else
        				if (bviaj){
        					s.useDelimiter("\\s* \\s*");
        					viaje v = sis.getviaje(s.next());
        					canjid.setText(v.getId());
        					canjnom.setText(v.getNomb());
        					canjdes.setText(v.getDesc());
        					canjfac.setText(String.valueOf(v.getFactor()));
        					canjori.setText(v.getOrigen());
        					canjdest.setText(v.getDestino());
        					if (v.getEstado().equals(Est.Disponible))
            					canjest.setSelectedIndex(0);
            				else
            					if (v.getEstado().equals(Est.Caduco))
            						canjest.setSelectedIndex(1);
            					else
            						canjest.setSelectedIndex(2);
        					card2.show(panelcard2, "modiviaj");
        				}
        				else
        					if (bvia){
        						s.useDelimiter("\\s* \\s*");
        						viajero via = sis.getvia(s.next());
        						moddni.setText(String.valueOf(via.getDni()));
        						modnombre.setText(via.getNom());
        						card2.show(panelcard2, "modivia");
        					}
        					else{
        						s.useDelimiter("\\s*-\\s*");
        						parlugares par = tabladestino.getpar(s.next(), s.next());
        						parori.setText(par.getOrigen());
        						pardes.setText(par.getDestino());
        						pargan.setText(String.valueOf(par.getGanancia()));
        						parcost.setText(String.valueOf(par.getCosto()));
        						card2.show(panelcard2, "modipar");
        					}
        						
        		}
        	}
        });
        bmod.setFont(new Font("Tahoma", Font.PLAIN, 16));
        bmod.setBounds(554, 103, 119, 25);
        panellistas.add(bmod);
        
        beli = new JButton("Eliminar");
        beli.setEnabled(false);
        beli.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (!list_3.isSelectionEmpty()){
        			String l=(String) list_3.getSelectedValue();
        			Scanner s = new Scanner(l);
        			if (bvia){
        				s.useDelimiter("\\s* \\s*");
        				l = s.next();
        				sis.bajaviajero(Integer.parseInt(l));
        				blistavia.doClick();
        			}
        			else
        				if (bgen){
        					s.useDelimiter("\\s* \\s*");
        					l = s.next();
        					sis.bajagen(l);
        					blistagen.doClick();
        				}
        				else
        					if (bviaj){
        						s.useDelimiter("\\s* \\s*");
        						l = s.next();
        						sis.bajaviaje(l);
        						blistaviaj.doClick();
        					}
        					else{
        						s.useDelimiter("\\s*-\\s*");
        						sis.bajaparlugar(s.next(), s.next());
        						blistapar.doClick();
        					}
        		}
        	}
        });
        beli.setFont(new Font("Tahoma", Font.PLAIN, 16));
        beli.setBounds(763, 103, 102, 25);
        panellistas.add(beli);
        
        
        list_3 = new JList();
        list_3.addListSelectionListener(new ListSelectionListener() {
        	public void valueChanged(ListSelectionEvent arg0) {
        		if (list_3.isSelectionEmpty()){
        			bmod.setEnabled(false);
        			beli.setEnabled(false);
        		}
        		else
        			if (bvia && !sis.Haylista1()){
        				bmod.setEnabled(false);
            			beli.setEnabled(false);
        			}
        			else
        				if (bgen && !sis.getHaylistagen()){
        					bmod.setEnabled(false);
                			beli.setEnabled(false);
        				}
        				else
        					if (bviaj && !sis.Haylista2()){
        						bmod.setEnabled(false);
        	        			beli.setEnabled(false);
        					}
        					else
        						if (bpar && !tabladestino.getHaylistapar()){
        							bmod.setEnabled(false);
            	        			beli.setEnabled(false);
        						}
        						else{
        							bmod.setEnabled(true);
        							beli.setEnabled(true);
        						}
        	}
        });
        list_3.setBounds(10, 109, 465, 403);
        panellistas.add(list_3);
        
        btnVolver_2 = new JButton("Volver");
        btnVolver_2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnVolver_2.setFont(new Font("Tahoma", Font.PLAIN, 18));
        btnVolver_2.setBounds(32, 15, 165, 25);
        panellistas.add(btnVolver_2);
        
        panel_1 = new JPanel();
        panelcard.add(panel_1, "nuevogen");
        panel_1.setLayout(null);
        
        JLabel lblNuevoGenerador = new JLabel("Nuevo Generador");
        lblNuevoGenerador.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblNuevoGenerador.setBounds(407, 0, 183, 28);
        panel_1.add(lblNuevoGenerador);
        
        JSeparator separator = new JSeparator();
        separator.setBounds(10, 26, 968, 2);
        panel_1.add(separator);
        
        JLabel lblId = new JLabel("ID:");
        lblId.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblId.setBounds(10, 110, 41, 28);
        panel_1.add(lblId);
        
        nuevogenid = new JTextField();
        nuevogenid.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogenid.setBounds(64, 112, 116, 28);
        panel_1.add(nuevogenid);
        nuevogenid.setColumns(10);
        
        JLabel lblNewLabel_2 = new JLabel("Nombre:");
        lblNewLabel_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNewLabel_2.setBounds(237, 110, 77, 28);
        panel_1.add(lblNewLabel_2);
        
        nuevogennom = new JTextField();
        nuevogennom.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogennom.setColumns(10);
        nuevogennom.setBounds(338, 112, 116, 28);
        panel_1.add(nuevogennom);
        
        JLabel lblDescripcion_2 = new JLabel("Descripcion:");
        lblDescripcion_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDescripcion_2.setBounds(10, 195, 116, 28);
        panel_1.add(lblDescripcion_2);
        
        nuevogendes = new JTextField();
        nuevogendes.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogendes.setColumns(10);
        nuevogendes.setBounds(111, 197, 646, 28);
        panel_1.add(nuevogendes);
        
        JComboBox nuevogenest = new JComboBox();
        nuevogenest.setModel(new DefaultComboBoxModel(new String[] {"Disponible", "Caduco", "Suspendido"}));
        nuevogenest.setBounds(581, 110, 116, 28);
        panel_1.add(nuevogenest);
        
        JLabel lblEstado_1 = new JLabel("Estado:");
        lblEstado_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblEstado_1.setBounds(490, 110, 77, 28);
        panel_1.add(lblEstado_1);
        
        JLabel lblTipo = new JLabel("Tipo:");
        lblTipo.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblTipo.setBounds(10, 245, 77, 28);
        panel_1.add(lblTipo);
        
        JComboBox combotipo = new JComboBox();
        combotipo.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (combotipo.getSelectedIndex() == 2){
        			comboviaje.setEnabled(true);
        			nuevogenori.setEnabled(true);
        			nuevogendest.setEnabled(true);
        			nuevogenprecio.setEnabled(false);
    				nuevogencant.setEnabled(false);
    				nuevogencat.setEnabled(false);
        		}
        		else{
        			comboviaje.setEnabled(false);
        			nuevogenori.setEnabled(false);
        			nuevogendest.setEnabled(false);
        			comboviaje.setSelectedIndex(0);
        			if (combotipo.getSelectedIndex() == 3){
        				nuevogenprecio.setEnabled(true);
        				nuevogencant.setEnabled(true);
        				nuevogencat.setEnabled(true);
        			}
        			else{
        				nuevogenprecio.setEnabled(false);
        				nuevogencant.setEnabled(false);
        				nuevogencat.setEnabled(false);
        			}
        		}
        	}
        });
        combotipo.setModel(new DefaultComboBoxModel(new String[] {"Combustible", "Consumo", "Viaje", "Hotel"}));
        combotipo.setBounds(111, 247, 116, 28);
        panel_1.add(combotipo);
        
        JLabel lblOrigen_3 = new JLabel("Origen:");
        lblOrigen_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblOrigen_3.setBounds(10, 337, 77, 28);
        panel_1.add(lblOrigen_3);
        
        JLabel lblDestino_3 = new JLabel("Destino:");
        lblDestino_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDestino_3.setBounds(10, 394, 77, 28);
        panel_1.add(lblDestino_3);
        
        nuevogenori = new JTextField();
        nuevogenori.setEnabled(false);
        nuevogenori.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogenori.setColumns(10);
        nuevogenori.setBounds(111, 343, 116, 28);
        panel_1.add(nuevogenori);
        
        nuevogendest = new JTextField();
        nuevogendest.setEnabled(false);
        nuevogendest.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogendest.setColumns(10);
        nuevogendest.setBounds(111, 394, 116, 28);
        panel_1.add(nuevogendest);
        
        adi1 = new JTextField();
        adi1.setEnabled(false);
   
        adi1.setFont(new Font("Tahoma", Font.PLAIN, 12));
        adi1.setColumns(10);
        adi1.setBounds(262, 343, 116, 28);
        panel_1.add(adi1);
        
        adi2 = new JTextField();
        adi2.setEnabled(false);
        adi2.setFont(new Font("Tahoma", Font.PLAIN, 12));
        adi2.setColumns(10);
        adi2.setBounds(262, 394, 116, 28);
        panel_1.add(adi2);
        
        cost1 = new JTextField();
        cost1.setEnabled(false);
        cost1.setFont(new Font("Tahoma", Font.PLAIN, 12));
        cost1.setColumns(10);
        cost1.setBounds(400, 343, 116, 28);
        panel_1.add(cost1);
        
        adi3 = new JTextField();
        adi3.setEnabled(false);
        adi3.setFont(new Font("Tahoma", Font.PLAIN, 12));
        adi3.setColumns(10);
        adi3.setBounds(262, 447, 116, 28);
        panel_1.add(adi3);
        
        cost2 = new JTextField();
        cost2.setEnabled(false);
        cost2.setFont(new Font("Tahoma", Font.PLAIN, 12));
        cost2.setColumns(10);
        cost2.setBounds(400, 396, 116, 28);
        panel_1.add(cost2);
        
        cost3 = new JTextField();
        cost3.setEnabled(false);
        cost3.setFont(new Font("Tahoma", Font.PLAIN, 12));
        cost3.setColumns(10);
        cost3.setBounds(400, 447, 116, 28);
        panel_1.add(cost3);
        
        JCheckBox box1 = new JCheckBox("Adi.1");
        box1.setEnabled(false);
        box1.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent arg0) {
        		if (box1.isSelected()){
        			adi1.setEnabled(true);
        			cost1.setEnabled(true);
        			box2.setEnabled(true);
        		}
        		else{
        			adi1.setEnabled(false);
        			cost1.setEnabled(false);
        			adi2.setEnabled(false);
        			cost2.setEnabled(false);
        			adi3.setEnabled(false);
        			cost3.setEnabled(false);
        			box2.setSelected(false);
        			box2.setEnabled(false);
        			box3.setSelected(false);
        			box3.setEnabled(false);
        		}
        	}
        });
        box1.setBounds(270, 282, 58, 23);
        panel_1.add(box1);
        
        JLabel lblAdicionales = new JLabel("Adicionales");
        lblAdicionales.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblAdicionales.setBounds(280, 312, 77, 28);
        panel_1.add(lblAdicionales);
        
        JLabel lblCosto = new JLabel("Costo");
        lblCosto.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCosto.setBounds(407, 312, 77, 28);
        panel_1.add(lblCosto);
        
        box2 = new JCheckBox("Adi.2");
        box2.setEnabled(false);
        box2.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent e) {
        		if (box2.isSelected()){
        			adi2.setEnabled(true);
        			cost2.setEnabled(true);
        			if (comboviaje.getSelectedIndex() == 2)
        				box3.setEnabled(true);
        			else
        				box3.doClick();
        		}
        		else{
        			adi2.setEnabled(false);
        			cost2.setEnabled(false);
        			adi3.setEnabled(false);
        			cost3.setEnabled(false);
        			box3.setSelected(false);
        			box3.setEnabled(false);
        		}
        	}
        });
        box2.setBounds(338, 282, 58, 23);
        panel_1.add(box2);
        
        box3 = new JCheckBox("Adi.3");
        box3.setEnabled(false);
        box3.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent e) {
        		if (box3.isSelected()){
        			adi3.setEnabled(true);
        			cost3.setEnabled(true);
        		}
        		else{
        			adi3.setEnabled(false);
        			cost3.setEnabled(false);
        		}
        	}
        });
        box3.setBounds(407, 282, 58, 23);
        panel_1.add(box3);
        
        lblTipoDeViaje = new JLabel("Tipo de viaje:");
        lblTipoDeViaje.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblTipoDeViaje.setBounds(10, 298, 96, 28);
        panel_1.add(lblTipoDeViaje);
        
        comboviaje = new JComboBox();
        comboviaje.setEnabled(false);
        comboviaje.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (comboviaje.getSelectedIndex() == 1 || comboviaje.getSelectedIndex() == 2){
        			box1.setEnabled(true);
        			box1.setSelected(false);
        		}
        		else{
        			box1.setEnabled(false);
        			box1.setSelected(false);
        		}
        		box2.setEnabled(false);
    			box3.setEnabled(false);
    			adi1.setEnabled(false);
    			cost1.setEnabled(false);
    			adi2.setEnabled(false);
    			cost2.setEnabled(false);
    			adi3.setEnabled(false);
    			cost3.setEnabled(false);
        	}
        });
        comboviaje.setModel(new DefaultComboBoxModel(new String[] {"Turista", "Business", "Primera"}));
        comboviaje.setBounds(111, 304, 116, 28);
        panel_1.add(comboviaje);
        
        lblPrecioNoche_1 = new JLabel("Precio noche:");
        lblPrecioNoche_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblPrecioNoche_1.setBounds(601, 307, 96, 28);
        panel_1.add(lblPrecioNoche_1);
        
        lblCantidadDeNoches = new JLabel("Cantidad de noches:");
        lblCantidadDeNoches.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCantidadDeNoches.setBounds(601, 369, 143, 28);
        panel_1.add(lblCantidadDeNoches);
        
        lblCategoria = new JLabel("Categoria:");
        lblCategoria.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCategoria.setBounds(601, 430, 96, 28);
        panel_1.add(lblCategoria);
        
        nuevogenprecio = new JTextField();
        nuevogenprecio.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogenprecio.setEnabled(false);
        nuevogenprecio.setColumns(10);
        nuevogenprecio.setBounds(767, 312, 116, 28);
        panel_1.add(nuevogenprecio);
        
        nuevogencant = new JTextField();
        nuevogencant.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogencant.setEnabled(false);
        nuevogencant.setColumns(10);
        nuevogencant.setBounds(767, 369, 116, 28);
        panel_1.add(nuevogencant);
        
        nuevogencat = new JTextField();
        nuevogencat.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogencat.setEnabled(false);
        nuevogencat.setColumns(10);
        nuevogencat.setBounds(767, 436, 116, 28);
        panel_1.add(nuevogencat);
        
        JButton btnVolver_3 = new JButton("Volver");
        btnVolver_3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnVolver_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnVolver_3.setBounds(581, 479, 143, 28);
        panel_1.add(btnVolver_3);
        
        JButton btnAgregar = new JButton("agregar");
        btnAgregar.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		Est e1;
        		if (nuevogenest.getSelectedIndex() == 0)
        			e1 = Est.Disponible;
        		else
        			if (nuevogenest.getSelectedIndex() == 1)
        				e1 = Est.Caduco;
        			else
        				e1 = Est.Suspendido;
        		if (combotipo.getSelectedIndex() == 0)
        			sis.creacombustible(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1);
        		else
        			if (combotipo.getSelectedIndex() == 1)
        				sis.creaconsumo(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1);
        			else
        				if (combotipo.getSelectedIndex() == 3)
        					sis.creahotel(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1, Integer.parseInt(nuevogencat.getText()), Double.parseDouble(nuevogenprecio.getText()), Integer.parseInt(nuevogencant.getText()));
        				else{
        					viaje via;
        					if (comboviaje.getSelectedIndex() == 0){
        						via = new turista(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1, nuevogenori.getText(), nuevogendest.getText());
        					}
        					else
        						if (comboviaje.getSelectedIndex() == 1){
        							via = new business(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1, nuevogenori.getText(), nuevogendest.getText());
        						}
        						else{
        							via = new primera(nuevogenid.getText(), nuevogennom.getText(), nuevogendes.getText(), Double.parseDouble(nuevogenfac.getText()), e1, nuevogenori.getText(), nuevogendest.getText());
        						}
        					sis.creaviajegen(via);
        				}
        		JOptionPane.showMessageDialog(new JFrame(), "Generador agregado");
        	}
        });
        btnAgregar.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnAgregar.setBounds(764, 484, 143, 28);
        panel_1.add(btnAgregar);
        
        lblFactor_1 = new JLabel("Factor:");
        lblFactor_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblFactor_1.setBounds(734, 110, 77, 28);
        panel_1.add(lblFactor_1);
        
        nuevogenfac = new JTextField();
        nuevogenfac.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nuevogenfac.setColumns(10);
        nuevogenfac.setBounds(806, 110, 116, 28);
        panel_1.add(nuevogenfac);
        
        panel_2 = new JPanel();
        panelcard.add(panel_2, "nuevoviaje");
        panel_2.setLayout(null);
        
        lblNuevoViaje = new JLabel("Nuevo Viaje");
        lblNuevoViaje.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblNuevoViaje.setBounds(416, 0, 119, 28);
        panel_2.add(lblNuevoViaje);
        
        label_5 = new JLabel("ID:");
        label_5.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_5.setBounds(10, 109, 41, 28);
        panel_2.add(label_5);
        
        ncanjid = new JTextField();
        ncanjid.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjid.setColumns(10);
        ncanjid.setBounds(60, 109, 116, 28);
        panel_2.add(ncanjid);
        
        lblNombre_3 = new JLabel("Nombre:");
        lblNombre_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNombre_3.setBounds(222, 109, 70, 28);
        panel_2.add(lblNombre_3);
        
        ncanjnom = new JTextField();
        ncanjnom.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjnom.setColumns(10);
        ncanjnom.setBounds(328, 111, 116, 28);
        panel_2.add(ncanjnom);
        
        lblEstado_2 = new JLabel("Estado:");
        lblEstado_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblEstado_2.setBounds(500, 109, 70, 28);
        panel_2.add(lblEstado_2);
        
        ncanjest = new JComboBox();
        ncanjest.setModel(new DefaultComboBoxModel(new String[] {"Disponible", "Caduco", "Suspendido"}));
        ncanjest.setBounds(614, 111, 107, 28);
        panel_2.add(ncanjest);
        
        lblFactor_2 = new JLabel("Factor:");
        lblFactor_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblFactor_2.setBounds(766, 109, 70, 28);
        panel_2.add(lblFactor_2);
        
        ncanjfac = new JTextField();
        ncanjfac.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjfac.setColumns(10);
        ncanjfac.setBounds(846, 111, 116, 28);
        panel_2.add(ncanjfac);
        
        label_6 = new JLabel("Descripcion:");
        label_6.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_6.setBounds(56, 197, 116, 28);
        panel_2.add(label_6);
        
        ncanjdes = new JTextField();
        ncanjdes.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjdes.setColumns(10);
        ncanjdes.setBounds(157, 199, 646, 28);
        panel_2.add(ncanjdes);
        
        lblTipoDeViaje_1 = new JLabel("Tipo de viaje:");
        lblTipoDeViaje_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblTipoDeViaje_1.setBounds(56, 247, 107, 28);
        panel_2.add(lblTipoDeViaje_1);
        
        ncanjtipo = new JComboBox();
        ncanjtipo.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (ncanjtipo.getSelectedIndex() == 1 || ncanjtipo.getSelectedIndex() == 2){
        			a1.setEnabled(true);
        			a1.setSelected(false);
        		}
        		else{
        			a1.setEnabled(false);
        			a1.setSelected(false);
        		}
        		a2.setEnabled(false);
    			a3.setEnabled(false);
    			nadi1.setEnabled(false);
    			ncost1.setEnabled(false);
    			nadi2.setEnabled(false);
    			ncost2.setEnabled(false);
    			nadi3.setEnabled(false);
    			ncost3.setEnabled(false);
        	}
        });
        ncanjtipo.setModel(new DefaultComboBoxModel(new String[] {"Turista", "Business", "Primera"}));
        ncanjtipo.setBounds(194, 249, 116, 28);
        panel_2.add(ncanjtipo);
        
        label_11 = new JLabel("Origen:");
        label_11.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_11.setBounds(56, 339, 77, 28);
        panel_2.add(label_11);
        
        ncanjori = new JTextField();
        ncanjori.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjori.setColumns(10);
        ncanjori.setBounds(157, 345, 116, 28);
        panel_2.add(ncanjori);
        
        label_12 = new JLabel("Destino:");
        label_12.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_12.setBounds(56, 396, 77, 28);
        panel_2.add(label_12);
        
        ncanjdest = new JTextField();
        ncanjdest.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncanjdest.setColumns(10);
        ncanjdest.setBounds(157, 396, 116, 28);
        panel_2.add(ncanjdest);
        
        nadi1 = new JTextField();
        nadi1.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nadi1.setEnabled(false);
        nadi1.setColumns(10);
        nadi1.setBounds(308, 345, 116, 28);
        panel_2.add(nadi1);
        
        nadi2 = new JTextField();
        nadi2.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nadi2.setEnabled(false);
        nadi2.setColumns(10);
        nadi2.setBounds(308, 396, 116, 28);
        panel_2.add(nadi2);
        
        nadi3 = new JTextField();
        nadi3.setFont(new Font("Tahoma", Font.PLAIN, 12));
        nadi3.setEnabled(false);
        nadi3.setColumns(10);
        nadi3.setBounds(308, 449, 116, 28);
        panel_2.add(nadi3);
        
        ncost3 = new JTextField();
        ncost3.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncost3.setEnabled(false);
        ncost3.setColumns(10);
        ncost3.setBounds(446, 449, 116, 28);
        panel_2.add(ncost3);
        
        ncost2 = new JTextField();
        ncost2.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncost2.setEnabled(false);
        ncost2.setColumns(10);
        ncost2.setBounds(446, 398, 116, 28);
        panel_2.add(ncost2);
        
        ncost1 = new JTextField();
        ncost1.setFont(new Font("Tahoma", Font.PLAIN, 12));
        ncost1.setEnabled(false);
        ncost1.setColumns(10);
        ncost1.setBounds(446, 345, 116, 28);
        panel_2.add(ncost1);
        
        label_13 = new JLabel("Costo");
        label_13.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_13.setBounds(453, 314, 77, 28);
        panel_2.add(label_13);
        
        label_14 = new JLabel("Adicionales");
        label_14.setFont(new Font("Tahoma", Font.PLAIN, 15));
        label_14.setBounds(326, 314, 77, 28);
        panel_2.add(label_14);
        
        a1 = new JCheckBox("Adi.1");
        a1.setEnabled(false);
        a1.setBounds(316, 284, 58, 23);
        panel_2.add(a1);
        
        a2 = new JCheckBox("Adi.2");
        a2.setEnabled(false);
        a2.setBounds(384, 284, 58, 23);
        panel_2.add(a2);
        
        a3 = new JCheckBox("Adi.3");
        a3.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent e) {
        		if (a3.isSelected()){
        			nadi3.setEnabled(true);
        			ncost3.setEnabled(true);
        		}
        		else{
        			nadi3.setEnabled(false);
        			ncost3.setEnabled(false);
        		}
        	}
        });
        a3.setEnabled(false);
        a3.setBounds(453, 284, 58, 23);
        panel_2.add(a3);
        
        btnVolver_4 = new JButton("Volver");
        btnVolver_4.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnVolver_4.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnVolver_4.setBounds(638, 363, 131, 33);
        panel_2.add(btnVolver_4);
        
        btnAgregar_1 = new JButton("Agregar");
        btnAgregar_1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		viaje via;
        		Est e1;
        		if (ncanjest.getSelectedIndex() == 0)
        			e1 = Est.Disponible;
        		else
        			if (ncanjest.getSelectedIndex() == 1)
        				e1 = Est.Caduco;
        			else
        				e1 = Est.Suspendido;
        		try{
        			if (ncanjid.getText().equals("") || ncanjnom.getText().equals("") || ncanjdes.getText().equals("") || ncanjori.getText().equals("") || ncanjdes.getText().equals(""))
        				JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        			else
        				if (Double.parseDouble(ncanjfac.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "El factor debe ser positivo");
        				else{
        					String ori = ncanjori.getText(); 
        					ori = ncanjori.getText().substring(0,1).toUpperCase() + ori.substring(1).toLowerCase();
        					String dest = ncanjdest.getText();
        					dest = ncanjdest.getText().substring(0,1).toUpperCase() + dest.substring(1).toLowerCase();
        					parlugares par = tabladestino.getpar(ori, dest);
        					if (par == null)
        						JOptionPane.showMessageDialog(new JFrame(), "No se encotro este origen-destino en la tabla");
        					else
        						
        						if (ncanjtipo.getSelectedIndex() == 1){
        							via = new turista(ncanjid.getText(), ncanjnom.getText(), ncanjdes.getText(), Double.parseDouble(ncanjfac.getText()), e1, ori, dest);
        							sis.creaviajecan(via);
        						}
        						else
        							if (ncanjtipo.getSelectedIndex() == 2){
        								if ((a1.isSelected() && nadi1.getText().equals("")) || (a2.isSelected() && a2.isEnabled() && adi2.getText().equals("")))
        									JOptionPane.showMessageDialog(new JFrame(), "Hay adicionales vacios");
        								else
        									if ((a1.isSelected() && Double.parseDouble(ncost1.getText()) < 0) || a2.isSelected() && a2.isEnabled() && Double.parseDouble(ncost2.getText()) < 0)
        										JOptionPane.showMessageDialog(new JFrame(), "Los costos de adicionales deben ser positivos");
        									else{
        										via = new business(ncanjid.getText(), ncanjnom.getText(), ncanjdes.getText(), Double.parseDouble(ncanjfac.getText()), e1, ori, dest);
        										sis.creaviajecan(via); 
        										String adi;
        										if (a1.isSelected()){
        											adi = nadi1.getText() + "," + ncost1.getText();
        											if (a2.isSelected() && a2.isEnabled()){
        												adi = (adi + "," + nadi2.getText() + "," + ncost2.getText() + ",/");
        											}
        											else
        												adi = (adi + ",/");
        										}
        										else
        											adi = "/";
        										via.agregaadi(adi);
        									}
        							}
        							else{
        								if ((a1.isSelected() && nadi1.getText().equals("")) || (a2.isSelected() && a2.isEnabled() && adi2.getText().equals("")) || (a3.isSelected() && a3.isEnabled() && adi3.getText().equals("")))
        									JOptionPane.showMessageDialog(new JFrame(), "Hay adicionales vacios");
        								else
        									if ((a1.isSelected() && Double.parseDouble(ncost1.getText()) < 0) || (a2.isSelected() && a2.isEnabled() && Double.parseDouble(ncost2.getText()) < 0) || a3.isSelected() && a3.isEnabled() && Double.parseDouble(ncost3.getText()) < 0)
        										JOptionPane.showMessageDialog(new JFrame(), "Los costos de adicionales deben ser positivos");
        									else{
        										via = new primera(ncanjid.getText(), ncanjnom.getText(), ncanjdes.getText(), Double.parseDouble(ncanjfac.getText()), e1, ori, dest);
        										sis.creaviajecan(via); 
        										String adi;
        										if (a1.isSelected()){
        											adi = nadi1.getText() + "," + ncost1.getText();
        											if (a2.isSelected() && a2.isEnabled()){
        												adi = (adi + "," + nadi2.getText() + "," + ncost2.getText());
        												if (a3.isSelected() && a3.isEnabled())
        													adi = (adi + "," + nadi3.getText() + "," + ncost3.getText() + ",/");
        												else
        													adi = adi + ",/";
        											}
        											else
        												adi = (adi + ",/");
        										}
        									else
        										adi = "/";
        									via.agregaadi(adi);
        									}
        							}
        				}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "Valores numericos no validos");
        		}
        		JOptionPane.showMessageDialog(new JFrame(), "Viaje agregado");
        		actualizalista();
        	}
        });
        btnAgregar_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnAgregar_1.setBounds(814, 363, 131, 33);
        panel_2.add(btnAgregar_1);
        
        panel_3 = new JPanel();
        panelcard.add(panel_3, "nuevovia");
        panel_3.setLayout(null);
        
        lblNevoViajero = new JLabel("Nuevo Viajero");
        lblNevoViajero.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNevoViajero.setBounds(412, 0, 127, 29);
        panel_3.add(lblNevoViajero);
        
        lblDni_1 = new JLabel("DNI:");
        lblDni_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDni_1.setBounds(87, 85, 141, 34);
        panel_3.add(lblDni_1);
        
        lblNombre_4 = new JLabel("Nombre:");
        lblNombre_4.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblNombre_4.setBounds(87, 167, 141, 34);
        panel_3.add(lblNombre_4);
        
        nuevoviad = new JTextField();
        nuevoviad.setBounds(218, 85, 133, 29);
        panel_3.add(nuevoviad);
        nuevoviad.setColumns(10);
        
        nuevovian = new JTextField();
        nuevovian.setColumns(10);
        nuevovian.setBounds(218, 176, 133, 29);
        panel_3.add(nuevovian);
        
        btnVolver_5 = new JButton("Volver");
        btnVolver_5.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnVolver_5.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnVolver_5.setBounds(563, 85, 163, 29);
        panel_3.add(btnVolver_5);
        
        btnAgregar_2 = new JButton("Agregar");
        btnAgregar_2.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		boolean exito=false;
        		try{
        			if (nuevovian.getText().equals(""))
        				JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        			else
        				if (Integer.parseInt(nuevoviad.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "El dni no puede ser negativo");
        				else{
        					exito = sis.creaviajero(nuevovian.getText(), Integer.parseInt(nuevoviad.getText()));
        					actualizalista();
        					if (exito)
        						JOptionPane.showMessageDialog(new JFrame(), "Viajero Agregado.");
        					else
        						JOptionPane.showMessageDialog(new JFrame(), "Dni Existente.");
        				}
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "el valor del dni es invalido");
        		}
        	}
        });
        btnAgregar_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnAgregar_2.setBounds(563, 179, 163, 29);
        panel_3.add(btnAgregar_2);
        
        panel_4 = new JPanel();
        panelcard.add(panel_4, "nuevopar");
        panel_4.setLayout(null);
        
        lblNuevoPar = new JLabel("Nuevo Par");
        lblNuevoPar.setFont(new Font("Tahoma", Font.PLAIN, 18));
        lblNuevoPar.setBounds(427, 0, 207, 29);
        panel_4.add(lblNuevoPar);
        
        lblOrigen_4 = new JLabel("Origen:");
        lblOrigen_4.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblOrigen_4.setBounds(51, 64, 81, 29);
        panel_4.add(lblOrigen_4);
        
        lblDestino_4 = new JLabel("Destino:");
        lblDestino_4.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDestino_4.setBounds(51, 115, 81, 29);
        panel_4.add(lblDestino_4);
        
        lblCosto_2 = new JLabel("Costo:");
        lblCosto_2.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblCosto_2.setBounds(51, 181, 81, 29);
        panel_4.add(lblCosto_2);
        
        lblGanancia_1 = new JLabel("Ganancia:");
        lblGanancia_1.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblGanancia_1.setBounds(51, 248, 95, 29);
        panel_4.add(lblGanancia_1);
        
        nuevoori = new JTextField();
        nuevoori.setBounds(173, 64, 145, 34);
        panel_4.add(nuevoori);
        nuevoori.setColumns(10);
        
        nuevodest = new JTextField();
        nuevodest.setColumns(10);
        nuevodest.setBounds(173, 121, 145, 34);
        panel_4.add(nuevodest);
        
        nuevocost = new JTextField();
        nuevocost.setColumns(10);
        nuevocost.setBounds(173, 187, 145, 34);
        panel_4.add(nuevocost);
        
        nuevogan = new JTextField();
        nuevogan.setColumns(10);
        nuevogan.setBounds(173, 254, 145, 34);
        panel_4.add(nuevogan);
        
        btnNewButton = new JButton("Volver");
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		card.show(panelcard, "principal");
        	}
        });
        btnNewButton.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnNewButton.setBounds(414, 120, 145, 35);
        panel_4.add(btnNewButton);
        
        btnAgregar_3 = new JButton("Agregar");
        btnAgregar_3.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		try{
        			if (nuevoori.getText().equals("") || nuevodest.getText().equals(""))
        				JOptionPane.showMessageDialog(new JFrame(), "Hay campos vacios");
        			else
        				if (Double.parseDouble(nuevogan.getText()) < 0 || Double.parseDouble(nuevocost.getText()) < 0)
        					JOptionPane.showMessageDialog(new JFrame(), "Los valores numericos deben ser positivos");
        				else
        					sis.altaparlugar(nuevoori.getText(), nuevodest.getText(), Double.parseDouble(nuevogan.getText()), Double.parseDouble(nuevocost.getText()));
        		}
        		catch(NumberFormatException ex){
        			JOptionPane.showMessageDialog(new JFrame(), "Los valores numericos son invalidos");
        		}
        		JOptionPane.showMessageDialog(new JFrame(), "Par agregado");
        	}
        });
        btnAgregar_3.setFont(new Font("Tahoma", Font.PLAIN, 15));
        btnAgregar_3.setBounds(640, 120, 145, 35);
        panel_4.add(btnAgregar_3);
        
        a1.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent e) {
        		if (a1.isSelected()){
        			nadi1.setEnabled(true);
        			ncost1.setEnabled(true);
        			a2.setEnabled(true);
        		}
        		else{
        			nadi1.setEnabled(false);
        			ncost1.setEnabled(false);
        			nadi2.setEnabled(false);
        			ncost2.setEnabled(false);
        			nadi3.setEnabled(false);
        			ncost3.setEnabled(false);
        			a2.setSelected(false);
        			a2.setEnabled(false);
        			a3.setSelected(false);
        			a3.setEnabled(false);
        		}
        	}
        });
        a2.addChangeListener(new ChangeListener() {
        	public void stateChanged(ChangeEvent e) {
        		if (a2.isSelected()){
        			nadi2.setEnabled(true);
        			ncost2.setEnabled(true);
        			if (ncanjtipo.getSelectedIndex() == 2)
        				a3.setEnabled(true);
        			else
        				a3.doClick();
        		}
        		else{
        			nadi2.setEnabled(false);
        			ncost2.setEnabled(false);
        			nadi3.setEnabled(false);
        			ncost3.setEnabled(false);
        			a3.setSelected(false);
        			a3.setEnabled(false);
        		}
        	}
        });
        
        
        actualizalista();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        // TODO add your handling code here:
        double total = (sis.getEs().getAcumcom() + sis.getEs().getAcumcon() + sis.getEs().getAcumhot() + sis.getEs().getAcumvia());
        DecimalFormat df = new DecimalFormat("#.##");
        Texttotalest.setText("Total de Millas Obetenidas: " + df.format(total));
        textvecesvia.setText("Veces Utilizado: " + sis.getEs().getContvia());
        textveceshot.setText("Veces Utilizado: " + sis.getEs().getConthot());
        textvecescon.setText("Veces Utilizado: " + sis.getEs().getContcon());
        textvecescom.setText("Veces Utilizado: " + sis.getEs().getContcom());
        textpromvia.setText("Promedio: " + df.format((sis.getEs().getAcumvia() / sis.getEs().getContvia())));
        textpromhot.setText("Promedio: " + df.format((sis.getEs().getAcumhot() / sis.getEs().getConthot())));
        textpromcon.setText("Promedio: " + df.format((sis.getEs().getAcumcon() / sis.getEs().getContcon())));
        textpromcom.setText("Promedio: " + df.format((sis.getEs().getAcumcom() / sis.getEs().getContcom())));
        Barracomb.setStringPainted(true);
        Barrahotel.setStringPainted(true);
        Barracon.setStringPainted(true);
        Barraviaje.setStringPainted(true);
        Barracomb.setMaximum((int) Math.round(total));
        Barracon.setMaximum((int) Math.round(total));
        Barrahotel.setMaximum((int) Math.round(total));
        Barraviaje.setMaximum((int) Math.round(total));
        Barracomb.setString("Total de Millas de Combustible: " + df.format(sis.getEs().getAcumcom()));
        Barracon.setString("Total de Millas de Consumo: " + df.format(sis.getEs().getAcumcon()));
        Barrahotel.setString("Total de Millas de Hotel: " + df.format(sis.getEs().getAcumhot()));
        Barraviaje.setString("Total de Millas de Viaje Generador: " + df.format(sis.getEs().getAcumvia()));
        Barracomb.setValue((int) Math.round(sis.getEs().getAcumcom()));
        Barracon.setValue((int) Math.round(sis.getEs().getAcumcon()));
        Barrahotel.setValue((int) Math.round(sis.getEs().getAcumhot()));
        Barraviaje.setValue((int) Math.round(sis.getEs().getAcumvia()));
        card.show(panelcard, "card2");
    }

    /**
     * @param args the command line arguments
     * @throws FileNotFoundException 
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IU().setVisible(true);
            }
        });
    }
    

	public JList getList_1() {
		return list_1;
	}

	public void setList_1(JList list_1) {
		this.list_1 = list_1;
	}

	public JList getList_2() {
		return list_2;
	}

	public void setList_2(JList list_2) {
		this.list_2 = list_2;
	}

	public void actualizalista(){
		list_1.setModel(sis.generalista1());
		if (checkviaje.isSelected())
			list_2.setModel(sis.generalista2());
		else
			list_2.setModel(sis.generalista3());
		if (sis.Haylista1() && (sis.Haylista2() || sis.Haylista3())){
			list_1.setEnabled(true);
			list_2.setEnabled(true);
		}
		else{
			list_1.setEnabled(false);
			list_2.setEnabled(false);	
		}
	}


	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Barracomb;
    private javax.swing.JProgressBar Barracon;
    private javax.swing.JProgressBar Barrahotel;
    private javax.swing.JProgressBar Barraviaje;
    private javax.swing.JPanel Panelestadisticas;
    private javax.swing.JLabel Texttotalest;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel panelcard;
    private JLabel textvecesvia;
    private JLabel textveceshot;
    private JLabel textvecescom;
    private JLabel textvecescon;
    private JLabel textpromvia;
    private JLabel textpromhot;
    private JLabel textpromcom;
    private JLabel textpromcon;
    private JPanel panelranking;
    private JLabel lblNewLabel;
    private CardLayout card;
    private JTextArea ranking;
    private sistemacanjemillas sis;
    private JPanel panellistlugar;
    private JMenuItem mntmListadoDeLugares;
    private JLabel lblListadoDeLugares;
    private JTextArea arealugar;
    private JTextArea areacant;
    private JLabel lblVecesElegidoComo;
    private JLabel lblMenuDeCanjes;
    private JList list_1;
    private JList list_2;
    private JRadioButton checkprod;
    private JRadioButton checkviaje;
    private JButton botoncanje;
    private JButton btnVolver;
    private JButton btnAtrs;
    private JButton btnAtrs_1;
    private JPanel detallescanje;
    private JTextField textvia;
    private JTextField textnom;
    private JTextField textdisp;
    private JTextField textid;
    private JTextField textori;
    private JTextField textdes;
    private JTextField textprod;
    private JTextField textdesprod;
    private JTextField textcost;
    private CardLayout card2;
    private boolean bvia;
    private boolean bgen;
    private boolean bviaj;
    private boolean bpar;
    private JPanel modigen;
    private JPanel modivia;
    private JPanel modiviaj;
    private JPanel modipar;
    private JTextField modigenid;
    private JTextField modigennom;
    private JTextField modigenfac;
    private JTextField modigenori;
    private JTextField modigendest;
    private JTextArea modigendes;
    private JLabel lblNombre_1;
    private JLabel lblNewLabel_1;
    private JPanel panelmodhot;
    private JLabel lblPrecioNoche;
    private JLabel lblCantDeNoches;
    private JLabel lblCategria;
    private JTextField modprecionoche;
    private JTextField modcantnoche;
    private JTextField modcat;
    private JButton btnNewButton_1;
    private JPanel panelmodcomb;
    private JButton btnModificarCombustible;
    private JPanel panelmodcon;
    private JButton btnNewButton_2;
    private JLabel lblDni;
    private JLabel lblNombre_2;
    private JTextField moddni;
    private JTextField modnombre;
    private JButton btnModificarViajero;
    private JLabel lblOrigen_2;
    private JLabel lblDestino_2;
    private JLabel lblGanancia;
    private JLabel lblCosto_1;
    private JTextField parori;
    private JTextField pardes;
    private JTextField pargan;
    private JTextField parcost;
    private JButton btnModificarPar;
    private JPanel panel;
    private JLabel lblEstado;
    private JList list_3;
    private JButton blistavia;
    private JButton blistagen;
    private JButton blistaviaj;
    private JButton blistapar;
    private JTextField canjid;
    private JTextField canjnom;
    private JTextField canjfac;
    private JTextField canjdest;
    private JTextField canjori;
    private JScrollPane list3;
    private JButton bmod;
    private JButton beli;
    private JComboBox modigenest;
    private JButton btnVolver_2;
    private JPanel panel_1;
    private JTextField nuevogenid;
    private JTextField nuevogennom;
    private JTextField nuevogendes;
    private JTextField nuevogenori;
    private JTextField nuevogendest;
    private JTextField adi1;
    private JTextField adi2;
    private JTextField cost1;
    private JTextField adi3;
    private JTextField cost2;
    private JTextField cost3;
    private JCheckBox box2;
    private JCheckBox box3;
    private JLabel lblTipoDeViaje;
    private JComboBox comboviaje;
    private JLabel lblPrecioNoche_1;
    private JLabel lblCantidadDeNoches;
    private JLabel lblCategoria;
    private JTextField nuevogenprecio;
    private JTextField nuevogencant;
    private JTextField nuevogencat;
    private JLabel lblFactor_1;
    private JTextField nuevogenfac;
    private JPanel panel_2;
    private JLabel lblNuevoViaje;
    private JLabel label_5;
    private JTextField ncanjid;
    private JLabel lblNombre_3;
    private JTextField ncanjnom;
    private JLabel lblEstado_2;
    private JComboBox ncanjest;
    private JLabel lblFactor_2;
    private JTextField ncanjfac;
    private JLabel label_6;
    private JTextField ncanjdes;
    private JLabel lblTipoDeViaje_1;
    private JComboBox ncanjtipo;
    private JLabel label_11;
    private JTextField ncanjori;
    private JLabel label_12;
    private JTextField ncanjdest;
    private JTextField nadi1;
    private JTextField nadi2;
    private JTextField nadi3;
    private JTextField ncost3;
    private JTextField ncost2;
    private JTextField ncost1;
    private JLabel label_13;
    private JLabel label_14;
    private JCheckBox a1;
    private JCheckBox a2;
    private JCheckBox a3;
    private JButton btnVolver_4;
    private JButton btnAgregar_1;
    private JPanel panel_3;
    private JLabel lblNevoViajero;
    private JLabel lblDni_1;
    private JLabel lblNombre_4;
    private JTextField nuevoviad;
    private JTextField nuevovian;
    private JButton btnVolver_5;
    private JButton btnAgregar_2;
    private JPanel panel_4;
    private JLabel lblNuevoPar;
    private JLabel lblOrigen_4;
    private JLabel lblDestino_4;
    private JLabel lblCosto_2;
    private JLabel lblGanancia_1;
    private JTextField nuevoori;
    private JTextField nuevodest;
    private JTextField nuevocost;
    private JTextField nuevogan;
    private JButton btnNewButton;
    private JButton btnAgregar_3;
}
